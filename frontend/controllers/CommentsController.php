<?php

namespace frontend\controllers;

use backend\widgets\FlashAlert;
use Codeception\Step\Comment;
use common\models\CommentLikes;
use common\models\Comments;
use common\models\PostLikes;
use common\models\Posts;
use common\models\User;
use common\models\UserSaved;
use frontend\models\ResendVerificationEmailForm;
use frontend\models\VerifyEmailForm;
use SebastianBergmann\CodeCoverage\TestFixture\C;
use Yii;
use yii\base\InvalidArgumentException;
use yii\web\BadRequestHttpException;
use yii\web\Controller;
use yii\filters\VerbFilter;
use yii\filters\AccessControl;
use common\models\LoginForm;
use frontend\models\PasswordResetRequestForm;
use frontend\models\ResetPasswordForm;
use frontend\models\SignupForm;
use frontend\models\ContactForm;
use yii\web\Response;

/**
 * Site controller
 */
class CommentsController extends Controller
{

    public function beforeAction($action)
    {
        $this->enableCsrfValidation = false;
        return parent::beforeAction($action); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function behaviors()
    {
        return [
            'verbs' => [
                'class' => VerbFilter::className(),
                'actions' => [
                    'logout' => ['post'],
                ],
            ],
        ];
    }


    public function actionLike($id)
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        $params = ['comment_id' => $id, 'user_id' => Yii::$app->user->id];
        if ($model = CommentLikes::findOne($params)) {
            Yii::$app->response->setStatusCode(404);
            return [
                'likesCount' => Comments::findOne($id)->getLikesCount()
            ];
        } else {
            $model = new CommentLikes($params);
            $model->save();
            Yii::$app->response->setStatusCode(201);
            return [
                'likesCount' => Comments::findOne($id)->getLikesCount()
            ];
        }
    }

    public function actionUnLike($id)
    {
        Yii::$app->response->format = Response::FORMAT_JSON;
        $params = ['comment_id' => $id, 'user_id' => Yii::$app->user->id];
        if ($model = CommentLikes::findOne($params)) {
            $model->delete();
            Yii::$app->response->setStatusCode(201);
            return [
                'likesCount' => Comments::findOne($id)->getLikesCount()
            ];
        } else {
            Yii::$app->response->setStatusCode(404);
            return [
                'likesCount' => Comments::findOne($id)->getLikesCount()
            ];
        }

    }
}
